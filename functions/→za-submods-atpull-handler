
emulate -L zsh -o extendedglob -o warncreateglobal -o typesetsilent

[[ -z "${ICE[submods]}" ]] && return 0

[[ "$1" = plugin ]] && \
local type="$1" user="$2" plugin="$3" id_as="$4" dir="$5" || \
local type="$1" url="$2" id_as="$3" dir="$4"

local -a mods parts lines
local mod

mods=( ${(@s.;.)ICE[submods]} )

for mod in "${mods[@]}"; do
  parts=( "${(@s:->:)mod}" )
  # Remove only leading and trailing whitespace
  parts=( "${parts[@]//((#s)[[:space:]]##|[[:space:]]##(#e))/}" )

  print -r -- "z-a-submods: ${ZI[col-bar]}@@${ZI[col-rst]} Updating submodule ${ZI[col-bar]}@@${ZI[col-rst]}: ${ZI[col-pname]}${parts[1]}${ZI[col-rst]}" \
  "(directory: ${ZI[col-info]}${parts[2]}${ZI[col-rst]})"
  if [[ "${parts[1]}" != (http|https|ftp|ftps|scp)://* ]]; then
    parts[1]="https://github.com/${parts[1]}"
  fi
#TODO: #2 remove git -C
  command git -C "$dir/${parts[2]}" fetch
  lines=( ${(f)"$(command git -C "$dir/${parts[2]}" log --color --date=short --pretty=format:'%Cgreen%cd %h %Creset%s %Cred%d%Creset%n' ..FETCH_HEAD)"} )
  # Remove the (origin/master ...) segments, to expect only tags to appear
  lines=( "${(S)lines[@]//\(([,[:blank:]]#(origin|HEAD|main|master)[^a-zA-Z]##(HEAD|origin|main|master)[,[:blank:]]#)#\)/}" )
  (( $#lines )) && print -rl -- "${lines[@]}"
  command git -C "$dir/${parts[2]}" pull  --no-stat ${=ICE[pullopts]:---ff-only} origin |& command egrep -v '(FETCH_HEAD|up to date\.|From.*://)'
done
